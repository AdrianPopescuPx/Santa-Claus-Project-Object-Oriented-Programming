Starting audit...
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\checker\Checker.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\main\Main.java:7:8: Unused import - org.json.simple.JSONArray. [UnusedImports]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\main\Main.java:11:8: Unused import - java.io.Writer. [UnusedImports]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\main\Main.java:15:8: Unused import - java.util.Arrays. [UnusedImports]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\main\Main.java:16:8: Unused import - java.util.List. [UnusedImports]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\main\Main.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\AnnualChanges.java:1:9: Name 'SantaDatabase' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\AnnualChanges.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\AnnualChanges.java:14:26: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\AnnualChanges.java:14:49: Parameter newGifts should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\AnnualChanges.java:15:26: Parameter newChildren should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\AnnualChanges.java:16:26: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:1:9: Name 'SantaDatabase' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:28:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:32:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:36:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:40:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:44:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:48:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:52:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:56:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:58:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:59:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:60:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:61:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:62:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:63:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:64:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Children.java:65:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\ChildrenUpdate.java:1:9: Name 'SantaDatabase' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\ChildrenUpdate.java:10:27: Parameter id should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\ChildrenUpdate.java:10:35: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\ChildrenUpdate.java:10:54: Parameter newPreferences should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\ChildrenUpdate.java:10:87: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\ChildrenUpdate.java:16:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\ChildrenUpdate.java:20:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\ChildrenUpdate.java:24:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'getNewPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'getNewPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Input.java:1:9: Name 'SantaDatabase' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Input.java:22:18: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Input.java:22:37: Parameter santaBudget should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Input.java:22:54: Parameter childrenData should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Input.java:23:18: Parameter giftsData should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\Input.java:24:18: Parameter annualChanges should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:1:9: Name 'SantaDatabase' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:10:8: Unused import - java.io.FileNotFoundException. [UnusedImports]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:15:8: Unused import - java.util.Objects. [UnusedImports]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:59: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:62: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:64: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:65: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:73: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:74: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:87:44: Parameter jsonObject should be final. [FinalParameters]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:93: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:95: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:98: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:99: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:107: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:110: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:113: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:115: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:116: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:122: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:126: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:128: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:129: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:131: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:134: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:141: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\InputLoader.java:141:86: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\SantaGiftsList.java:1:9: Name 'SantaDatabase' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\SantaGiftsList.java:16:5: Class 'SantaGiftsList' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsList' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\SantaGiftsList.java:20:5: Class 'SantaGiftsList' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsList' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\SantaGiftsList.java:24:5: Class 'SantaGiftsList' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsList' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\SantaGiftsList.java:28:5: Class 'SantaGiftsList' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsList' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\SantaGiftsList.java:30:34: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\SantaGiftsList.java:31:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\SantaGiftsList.java:32:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\SantaDatabase\SantaGiftsList.java:33:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\Utils\OptionGifts.java:1:9: Name 'Utils' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\Utils\Utils.java:1:9: Name 'Utils' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\Utils\Utils.java:9:21: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\Utils\Utils.java:9:22: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\Santa-Claus-Project-Object-Oriented-Programming\.\src\Utils\Utils.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 85 errors.
